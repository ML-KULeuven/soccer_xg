[tool.poetry]
name = "soccer_xg"
version = "0.0.1"
description = "Train and analyse xG models on soccer event stream data"
authors = ["Pieter Robberechts <pieter.robberechts@cs.kuleuven.be>"]
license = "Apache Software License (http://www.apache.org/licenses/LICENSE-2.0)"
readme = 'README.md'
repository = "https://github.com/probberechts/soccer_xg"
homepage = "https://pypi.org/project/soccer_xg"
keywords = ["expected goals", "xG", "Soccer", "Football", "event stream data", "sports analytics", "Statsbomb", "Opta", "Wyscout"]
classifiers=[
	"Programming Language :: Python :: 3",
	"License :: OSI Approved :: Apache Software License",
	"Operating System :: OS Independent"
]

[tool.poetry.dependencies]
python = "^3.6.1"
numpy = "^1.18"
pandas = "^1.0"
scikit-learn = "^0.22.1"
ipykernel = "^5.1"
matplotsoccer = "^0.0.8"
matplotlib = "^3.1"
click = "^7.0"
tables = "^3.6"
requests = "^2.23"
xgboost = "^1.0"
seaborn = "^0.10.0"
fuzzywuzzy = "^0.18.0"
python-Levenshtein = "^0.12.0"
dask = {extras = ["array","distributed","dataframe"], version = "^2.15.0", optional = true}
dask_ml = {version = "^1.3.0", optional = true}
category_encoders = "^2.2.2"
asyncssh = {version = "^2.2.1", optional = true}
paramiko = {version = "^2.7.1", optional = true}
understat = "^0.1.2"
socceraction = "^0.2.1"
betacal = "^0.2.7"

[tool.poetry.extras]
dask = ["dask", "dask_ml", "asyncssh", "paramiko"]

[tool.poetry.dev-dependencies]
flake8-awesome = "^1.2"
mypy = "^0.761.0"
pylint = "^2.4"
pytest = "^5.3"
pytest-cov = "^2.8"
pytest-deadfixtures = "^2.1"
unify = "^0.5.0"
black = {version = "^19.10b0", allow-prereleases = true}
bumpversion = "^0.6.0"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
